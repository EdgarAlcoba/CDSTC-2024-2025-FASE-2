services:
  frontend:
    tty: true
    stdin_open: true
    build: ./Frontend
    container_name: eco-frontend-container
    volumes:
      - ./Frontend/src:/app/src:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - WATCHPACK_POLLING=true #Necesario para usuarios con windows
    networks:
      docnet:
        ipv4_address: 10.10.10.4

  backend:
    build: ./Backend/API
    container_name: python-api-container
    volumes:
      - ./Backend/API:/API:ro
    ports:
      - "4040:4040"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_NAME=cds_db
      - DB_PASSWORD=root
      - DB_USERNAME=root
      - DB_HOST=database
      - VECTORDB_HOST=10.10.10.10
    depends_on:
      database:
        condition: service_healthy
    networks:
      docnet:
        ipv4_address: 10.10.10.5

  database:
    build: ./Backend/DB
    container_name: db-api-container
    volumes:
      - ./Backend/DB/backup.sql:/docker-entrypoint-initdb.d/backup.sql:ro
    ports:
      - "6060:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cds_db
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      docnet:
        ipv4_address: 10.10.10.7

  qdrant:
    build: ./Backend/DB_AI
    ports:
      - "6333:6333"
    volumes:
      - ./Backend/DB_AI/storage:/qdrant/storage
    networks:
      docnet:
        ipv4_address: 10.10.10.10

networks:
  docnet:
    ipam:
      config:
        - subnet: 10.10.10.0/24